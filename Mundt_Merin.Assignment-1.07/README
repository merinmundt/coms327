
	--Remember what the PC has seen while being able to process new map 
	--Fog of War: New dungeon 
	--PC can now teleport to where the user chooses; cannot teleport onto already exiting monsters; can teleport onto rock without any direction
	--new map: contains terrain that consists of the old terrain along with new terrain that is an unknown type and unknown the the PC

	f key is a toggle for fog
	
change to gxx compiler

	--Change make compiler to use g++ instead of gcc.
	--rename dungeon2.c to dungeon2.cpp
	--compile and fix errors
	--change types of all integer variants (u_int8_t, etc.) to just plain int for simplicity.
	--change malloc calls to new calls. e.g. new Room[5];
	--change free calls to delete
	--update getgameDirectory and getGameFileName to return std::string
	--update their usages to use .c_str() to return a const char* where needed.
	--remove the free() commands on the old usages of these two function
	--update the two heap_remove_min calls to typecast the result into a corridor_path_t and game_event_t


	Application compiles and runs at this point.  But its still all C-like code.

	Full Porting to C++

	--created new header file dungeon.h
	--change all typedef structs to C++ structs or classes.  all members public for 	now for simplicity.
	--made a new class called players_t to hold the pc and monsters
	--separated out some code into new files (moves.cpp, character.cpp)
	--moves.cpp
	--all the methods regarding characters movement decisions.
	--character.cpp
	--game_character_t, pc_t and npc_t
	--changed game_character_t into a base class with pc_t and npc_t inheriting from it.
	--refactored the application to use the constructors of these classes to create characters.
		
